name: Build APK (Debug, dual JDK + repo patch)

on:
  workflow_dispatch:
  push:
    branches: ["main", "master"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) 用 JDK17 供 sdkmanager 使用
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # 2) 安装 Android SDK / sdkmanager
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      # 3) 安装与老项目匹配的平台和 build-tools（可按需增减）
      - name: Install SDK components
        run: |
          yes | sdkmanager --licenses
          sdkmanager \
            "platform-tools" \
            "platforms;android-25" "platforms;android-23" "platforms;android-28" \
            "build-tools;25.0.3" "build-tools;23.0.3" "build-tools;28.0.3"

      # 4) ★ 注入全局仓库（修复 jcenter 失效）
      - name: Inject global repositories for old Gradle
        run: |
          mkdir -p ~/.gradle/init.d
          cat > ~/.gradle/init.d/repo.gradle <<'EOF'
          allprojects { proj ->
            // 给构建脚本本身加仓库（用来拉 AGP 2.x）
            proj.buildscript {
              repositories {
                maven { url "https://dl.google.com/dl/android/maven2/" }
                maven { url "https://maven.google.com" }
                mavenCentral()
                jcenter() // 作为兜底，如果项目显式要求
              }
            }
            // 给项目依赖加仓库
            proj.repositories {
              maven { url "https://dl.google.com/dl/android/maven2/" }
              maven { url "https://maven.google.com" }
              mavenCentral()
              jcenter()
            }
          }
          EOF

      # 5) 切回 JDK8 来跑 Gradle 3.3
      - name: Switch to JDK 8 for build
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 8

      # 6) 构建 Debug APK
      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build debug APK
        run: |
          ./gradlew --version
          ./gradlew --no-daemon clean
          ./gradlew --no-daemon --stacktrace --info assembleDebug

      # 7) 上传产物
      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: MiNotes-debug-apk
          path: '**/build/outputs/apk/debug/*.apk'
